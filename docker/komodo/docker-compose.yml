# https://raw.githubusercontent.com/moghtech/komodo/main/compose/mongo.compose.yaml
services:
  mongo:
    image: mongo:8
    container_name: komodo-mongo
    restart: unless-stopped
    command: --quiet --wiredTigerCacheSizeGB 0.25
    networks:
      - komodo
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${KOMODO_DATABASE_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${KOMODO_DATABASE_PASSWORD}
    labels:
      # Prevent Komodo from stopping with StopAllContainers
      komodo.skip:

  core:
    image: ghcr.io/moghtech/komodo-core:1.19.5
    container_name: komodo-core
    restart: unless-stopped
    depends_on:
      - mongo
    expose:
      - 9120
    networks:
      - komodo
      - caddy
    environment:
      TZ: ${TZ}
      KOMODO_DATABASE_ADDRESS: mongo:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DATABASE_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DATABASE_PASSWORD}
      KOMODO_PASSKEY: ${KOMODO_PASSKEY}
      KOMODO_HOST: ${KOMODO_HOST}
      KOMODO_TITLE: ${KOMODO_TITLE}
      KOMODO_FIRST_SERVER: ${KOMODO_FIRST_SERVER}
      KOMODO_FIRST_SERVER_NAME: ${KOMODO_FIRST_SERVER_NAME}
      KOMODO_DISABLE_CONFIRM_DIALOG: ${KOMODO_DISABLE_CONFIRM_DIALOG}
      KOMODO_MONITORING_INTERVAL: ${KOMODO_MONITORING_INTERVAL}
      KOMODO_RESOURCE_POLL_INTERVAL: ${KOMODO_RESOURCE_POLL_INTERVAL}
      KOMODO_WEBHOOK_SECRET: ${KOMODO_WEBHOOK_SECRET}
      KOMODO_JWT_SECRET: ${KOMODO_JWT_SECRET}
      KOMODO_JWT_TTL: ${KOMODO_JWT_TTL}
      KOMODO_LOCAL_AUTH: ${KOMODO_LOCAL_AUTH}
      KOMODO_INIT_ADMIN_USERNAME: ${KOMODO_INIT_ADMIN_USERNAME}
      KOMODO_INIT_ADMIN_PASSWORD: ${KOMODO_INIT_ADMIN_PASSWORD}
      KOMODO_DISABLE_USER_REGISTRATION: ${KOMODO_DISABLE_USER_REGISTRATION}
      KOMODO_ENABLE_NEW_USERS: ${KOMODO_ENABLE_NEW_USERS}
      KOMODO_DISABLE_NON_ADMIN_CREATE: ${KOMODO_DISABLE_NON_ADMIN_CREATE}
      KOMODO_TRANSPARENT_MODE: ${KOMODO_TRANSPARENT_MODE}
      KOMODO_LOGGING_PRETTY: ${KOMODO_LOGGING_PRETTY}
      KOMODO_PRETTY_STARTUP_CONFIG: ${KOMODO_PRETTY_STARTUP_CONFIG}
      KOMODO_OIDC_ENABLED: ${KOMODO_OIDC_ENABLED}
      KOMODO_OIDC_PROVIDER: ${KOMODO_OIDC_PROVIDER}
      KOMODO_OIDC_CLIENT_ID: ${KOMODO_OIDC_CLIENT_ID}
      KOMODO_OIDC_CLIENT_SECRET: ${KOMODO_OIDC_CLIENT_SECRET}
      KOMODO_OIDC_USE_FULL_EMAIL: ${KOMODO_OIDC_USE_FULL_EMAIL}
    volumes:
      # Store dated backups of the database - https://komo.do/docs/setup/backup
      - /etc/komodo/backups:/backups
    labels:
      # Prevent Komodo from stopping with StopAllContainers
      komodo.skip:
      caddy: komodo.{$$DOMAIN}
      caddy.import: cloudflare
      caddy.reverse_proxy: "{{ upstreams 9120 }}"

  periphery:
    image: ghcr.io/moghtech/komodo-periphery:1.19.5
    container_name: komodo-periphery
    restart: unless-stopped
    networks:
      - komodo
    environment:
      TZ: ${TZ}
      PERIPHERY_ROOT_DIRECTORY: /etc/komodo
      PERIPHERY_PASSKEYS: ${KOMODO_PASSKEY}
      PERIPHERY_DISABLE_TERMINALS: ${PERIPHERY_DISABLE_TERMINALS}
      PERIPHERY_SSL_ENABLED: ${PERIPHERY_SSL_ENABLED}
      PERIPHERY_INCLUDE_DISK_MOUNTS: ${PERIPHERY_INCLUDE_DISK_MOUNTS}
      PERIPHERY_LOGGING_PRETTY: ${PERIPHERY_LOGGING_PRETTY}
      PERIPHERY_PRETTY_STARTUP_CONFIG: ${PERIPHERY_PRETTY_STARTUP_CONFIG}
    volumes:
      # Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      # Allow Periphery to see processes outside of container
      - /proc:/proc
      # Komodo Periphery root directory
      - /etc/komodo:/etc/komodo
    labels:
      # Prevent Komodo from stopping with StopAllContainers
      komodo.skip:

volumes:
  # Mongo
  mongo-data:
  mongo-config:

networks:
  komodo:
    name: komodo
  caddy:
    external: true
