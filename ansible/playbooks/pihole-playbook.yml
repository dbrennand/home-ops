---
- name: Configure Pi-hole
  hosts: pihole01.net.dbren.uk
  vars_files:
    - ../vars/pihole.yml
  pre_tasks:
    - name: Create Pi-hole directories
      become: true
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner | default(omit) }}"
        group: "{{ item.group | default(omit) }}"
        mode: "{{ item.mode | default('u=rwx,g=rx,o=rx') }}"
      with_items:
        - "{{ pihole_data_directory }}"
        - "{{ pihole_dnsmasq_directory }}"

    - name: Create Pi-hole local DNS (A/AAAA) configuration file from template
      ansible.builtin.template:
        src: ../templates/custom.list.j2
        dest: "{{ pihole_data_directory.path }}/custom.list"
        mode: u=rw,g=r,o=r
      when: pihole_local_dns is defined

    - name: Create Pi-hole local DNS (CNAME) configuration file from template
      ansible.builtin.template:
        src: ../templates/05-pihole-custom-cname.conf.j2
        dest: "{{ pihole_dnsmasq_directory.path }}/05-pihole-custom-cname.conf"
        mode: u=rw,g=r,o=r
      when: pihole_cname_records is defined
  roles:
    - role: geerlingguy.security
      become: true
    - role: artis3n.tailscale
    - role: geerlingguy.pip
      become: true
    - role: geerlingguy.docker
      become: true
  post_tasks:
    - name: Reset SSH connection to allow user changes to take affect
      ansible.builtin.meta: reset_connection

    - name: Include dbrennand.caddy_docker role
      ansible.builtin.include_role:
        name: dbrennand.caddy_docker

    - name: Create Pi-hole Docker container
      community.docker.docker_container:
        name: pihole
        image: "pihole/pihole:{{ pihole_image_tag }}"
        pull: true
        restart_policy: unless-stopped
        ports:
          - "53:53/tcp"
          - "53:53/udp"
        # exposed_ports:
        #   - 80
        networks:
          - name: caddy
        # network_mode: host
        volumes:
          - "{{ pihole_data_directory.path }}:/etc/pihole"
          - "{{ pihole_dnsmasq_directory.path }}:/etc/dnsmasq.d"
        env:
          # https://github.com/pi-hole/docker-pi-hole#environment-variables
          TZ: "{{ pihole_timezone }}"
          WEBPASSWORD: "{{ pihole_webpassword }}"
          FTLCONF_LOCAL_IPV4: "{{ pihole_ftlconf_local_ip }}"
          DNSMASQ_LISTENING: "all"
          PIHOLE_DNS_: "{{ pihole_upstream_dns | join(';') }}"
          # DHCP_ACTIVE: "true"
          # DHCP_START: "{{ pihole_dhcp_start }}"
          # DHCP_END: "{{ pihole_dhcp_end }}"
          # DHCP_ROUTER: "{{ pihole_dhcp_router }}"
          PIHOLE_DOMAIN: "{{ pihole_domain }}"
          VIRTUAL_HOST: "{{ pihole_virtual_host }}"
          TEMPERATUREUNIT: "c"
          QUERY_LOGGING: "{{ pihole_query_logging }}"
          WEBTHEME: "{{ pihole_web_theme }}"
          CORS_HOSTS: "{{ pihole_domain }}"
        # capabilities:
        #   - NET_ADMIN
        comparisons:
          env: strict
          networks: strict
        state: started

    - name: Create Pi-hole container crontab entry
      ansible.builtin.cron:
        name: Restart Pi-hole container at 2AM
        minute: "0"
        hour: "2"
        job: /usr/bin/docker restart pihole
